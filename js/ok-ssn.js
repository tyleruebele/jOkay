/**
 * ok-ssn.js
 * A pure JavaScript (no dependencies) solution to make HTML
 *  SSN inputs self-validating
 *
 * Copyright (c) 2013 Tyler Uebele
 * Released under the MIT license.  See included LICENSE
 *  or http://opensource.org/licenses/MIT
 *
 * latest version available at https://github.com/tyleruebele/jOkay
 *
 * Attaches itself to elements indicated in `okSSN.query`
 * Manually attach to elements by adding `onblur="okSSN.blur"`
 * Validate ssn string by calling `okSSN()`
 * Style errors by styling class in `okSSN.errorClass`
 *
 * History
 * Apr 11, 2007) rev. (Jun 14, 2007)
 * 2007-04-11 : Initial version
 * 2007-06-14 : revised
 * 2013-08-19 : refactored to stand-alone script, added to jOkay
 *
 * @link http://github.com/tyleruebele/jOkay
 * @link http://www.ssa.gov/employer/highgroup.txt
 * @link http://www.ssa.gov/employer/ssnweb.htm
 */

/**
 * Validate an SSN
 *
 * @param ssn      The ssn address to validate
 * @param beStrict Enforce internet routable addresses
 * @returns bool|string false on failure, ssn address on success
 */
function okSSN(ssn, beStrict) {
    // Trim the ssn of whitespace
    ssn = ssn.replace(/^\s+|\s+$/g, '');
    beStrict = 'undefined' !== typeof beStrict ? beStrict : false;

    if (aBits = /[a-z]/i.exec(ssn)) {
        okSSN.errno = 6;
        return false;
    }

    ssn = ssn.replace(/[^0-9]/ig, '');

    if (ssn.length != 9) {
        okSSN.errno = 1;
        return false;
    }
    if (ssn.substr(0, 3) == '000') {
        okSSN.errno = 2;
        return false;
    }
    if (ssn.substr(3, 2) == '00') {
        okSSN.errno = 3;
        return false;
    }
    if (ssn.substr(5, 4) == '0000') {
        okSSN.errno = 4;
        return false;
    }



    // check for known invalid numbers/partials
    var i;
    for (i = 0; i < okSSN.advertSSNs.length; i++) {
        if (ssn == okSSN.advertSSNs[i]) {
            okSSN.errno = 5;
            return false;
        }
    }
    var partial = ssn.substr(0, 5);
    for (i = 0; i < okSSN.badCombos.length; i++) {
        if (partial == okSSN.badCombos[i]) {
            okSSN.errno = 5;
            return false;
        }
    }

    // Check against the High Group list
    // Useful only for SSNs allocated before June 25, 2011
    // The implementation of SSN Randomization on June 25, 2011 eliminates
    // the significance of the High Group List, making it ineffective for
    // validating SSNs issued through the new random assignment method.
    if (beStrict) {
        // check for unallocated areas (leading 3 digits)
        if (!okSSN.highGroups[ssn.substr(0, 3)]) {
            okSSN.errno = 2;
            return false;
        }
        // check for unallocated groups (middle 2 digits)
        var hg = okSSN.highGroups[ssn.substr(0, 3)];
        var sg = ssn.substr(3, 2);
        for (i = 0; i < okSSN.groupOrder.length; i++) {
            if (okSSN.groupOrder[i] == sg) {
                break;
            }
            if (okSSN.groupOrder[i] == hg) {
                okSSN.errno = 3;
                return false;
            }
        }
    }

    okSSN.errno = 0;
    return ssn;
}

/**
 * Input event handler, adds ssn validation to selected inputs
 *
 * @param event    JS Event object
 * @param Input    DOM object for triggering input
 * @param beStrict Whether to require public address
 */
okSSN.blur = function(event, Input, beStrict) {
    // If beStrict was not passed, seek counter-indicative className
    if ('undefined' === typeof beStrict) {
        beStrict = !!Input.className.match(/js-ok-ssn-strict/);
    }

    Input.className = Input.className.replace(okSSN.errorClass, '');
    Input.title = '';
    if ('' == Input.value.replace(/^\s+|\s+$/g, '')) {
        return;
    }

    var ssn = okSSN(Input.value, beStrict);

    if (false === ssn) {
        Input.title = okSSN.errors[okSSN.errno];
        Input.className += ' ' + okSSN.errorClass;
    } else {
        Input.title = '';
        Input.value = ssn;
    }
};

/**
 * Attaches input event handler to selected inputs
 */
okSSN.init = function() {
    // Find all specified inputs
    var Inputs = document.querySelectorAll(okSSN.query);
    for (var i = Inputs.length - 1; i >= 0; i--) {
        // If the browser supports ssn inputs, don't interfere
        if ('text' == Inputs[i].type) {
            if (window.addEventListener) {
                Inputs[i].addEventListener('blur', function(event) {
                    okSSN.blur(event, this);
                });
            } else if (window.attachEvent) {
                Inputs[i].attachEvent('onblur', function(event) {
                    event = event || window.event;
                    okSSN.blur(event, event.target || event.srcElement);
                });
            }
        }
    }
};

/**
 * Hold the error number produced by okSSN, or 0 for no error
 * @type {number}
 */
okSSN.errno = 0;

/**
 * okSSN response code messages
 * Customized script by altering this before okSSN is called
 * @type {Array}
 */
okSSN.errors = [
    'SSN Validation Passed', // 0
    'Invalid SSN length',    // 1
    'Invalid SSN Area',      // 2
    'Invalid SSN Group',     // 3
    'Invalid SSN Serial',    // 4
    'Known Bad SSN',         // 5
    'Invalid SSN',           // 6
    'SSN Validation Failed'  // Unknown Error
];

/**
 * querySelector for which inputs will be validated
 * Customized script by altering this before okSSN.init is called
 * @type {string}
 */
okSSN.query = 'input[type=ssn],'
    + 'input.js-ok-ssn,'
    + 'input.js-ok-ssn-loose,'
    + 'input.js-ok-ssn-strict'
;

/**
 * CSS class to be applied to inputs with invalid ssn values
 * Customized script by altering this before okSSN is called
 * Style Invalid inputs by styling this class
 * @type {string}
 */
okSSN.errorClass = 'js-ok-ssn-error';

// Run okSSN.init() when the page loads
window.addEventListener
    ? window.addEventListener('load', okSSN.init, false)
    : window.attachEvent && window.attachEvent('onload', okSSN.init)
;

// known false SSNs
okSSN.advertSSNs = [
    '042103580', '062360749', '078051120', '095073645', '128036045',
    '135016629', '141186941', '165167999', '165187999', '165207999',
    '165227999', '165247999', '189092294', '212097694', '212099999',
    '306302348', '308125070', '468288779', '549241889', '987654320',
    '987654321', '987654322', '987654323', '987654324', '987654325',
    '987654326', '987654327', '987654328', '987654329'
];

// known bad partials
okSSN.badCombos = [
    '55019', '58619', '58629', '58659', '58679', '58680', '58681',
    '58682', '58683', '58684', '58685', '58686', '58687', '58688',
    '58689', '58690', '58691', '58692', '58693', '58694', '58695',
    '58696', '58697', '58698', '58699'
];

// "Within each area, the group number (middle two (2) digits)
//  range from 01 to 99 but are not assigned in consecutive
//  order. For administrative reasons, group numbers issued
//  first consist of the ODD numbers from 01 through 09 and
//  then EVEN numbers from 10 through 98, within each area
//  number allocated to a State. After all numbers in group 98
//  of a particular area have been issued, the EVEN Groups 02
//  through 08 are used, followed by ODD Groups 11 through 99."
//  ODD - 01, 03, 05, 07, 09
//  EVEN - 10 to 98
//  EVEN - 02, 04, 06, 08
//  ODD - 11 to 99
okSSN.groupOrder = [
    '01', '03', '05', '07', '09', '10', '12', '14', '16', '18', '20', '22',
    '24', '26', '28', '30', '32', '34', '36', '38', '40', '42', '44', '46',
    '48', '50', '52', '54', '56', '58', '60', '62', '64', '66', '68', '70',
    '72', '74', '76', '78', '80', '82', '84', '86', '88', '90', '92', '94',
    '96', '98', '02', '04', '06', '08', '11', '13', '15', '17', '19', '21',
    '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45',
    '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69',
    '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93',
    '95', '97', '99'
];

// This will be the FINAL publication of the High Group List.
// The implementation of SSN Randomization on June 25, 2011 eliminates the
// significance of the High Group List, making it ineffective for validating
// SSNs issued through the new random assignment method.
okSSN.highGroups = {
    '001': '11', '002': '11', '003': '08', '004': '13', '005': '13', '006': '11',
    '007': '11', '008': '94', '009': '94', '010': '94', '011': '94', '012': '94',
    '013': '94', '014': '94', '015': '94', '016': '94', '017': '94', '018': '94',
    '019': '94', '020': '94', '021': '94', '022': '92', '023': '92', '024': '92',
    '025': '92', '026': '92', '027': '92', '028': '92', '029': '92', '030': '92',
    '031': '92', '032': '92', '033': '92', '034': '92', '035': '74', '036': '74',
    '037': '74', '038': '74', '039': '74', '040': '15', '041': '15', '042': '15',
    '043': '15', '044': '15', '045': '15', '046': '15', '047': '15', '048': '15',
    '049': '15', '050': '02', '051': '02', '052': '02', '053': '02', '054': '02',
    '055': '02', '056': '02', '057': '02', '058': '02', '059': '02', '060': '02',
    '061': '02', '062': '02', '063': '02', '064': '02', '065': '02', '066': '02',
    '067': '02', '068': '02', '069': '02', '070': '02', '071': '02', '072': '02',
    '073': '02', '074': '02', '075': '02', '076': '02', '077': '02', '078': '02',
    '079': '02', '080': '02', '081': '02', '082': '02', '083': '02', '084': '02',
    '085': '02', '086': '02', '087': '02', '088': '02', '089': '02', '090': '02',
    '091': '02', '092': '02', '093': '02', '094': '02', '095': '02', '096': '02',
    '097': '02', '098': '02', '099': '02', '100': '02', '101': '02', '102': '02',
    '103': '02', '104': '02', '105': '02', '106': '98', '107': '98', '108': '98',
    '109': '98', '110': '98', '111': '98', '112': '98', '113': '98', '114': '98',
    '115': '98', '116': '98', '117': '98', '118': '98', '119': '98', '120': '98',
    '121': '98', '122': '98', '123': '98', '124': '98', '125': '98', '126': '98',
    '127': '98', '128': '98', '129': '98', '130': '98', '131': '98', '132': '98',
    '133': '98', '134': '98', '135': '25', '136': '25', '137': '25', '138': '25',
    '139': '23', '140': '23', '141': '23', '142': '23', '143': '23', '144': '23',
    '145': '23', '146': '23', '147': '23', '148': '23', '149': '23', '150': '23',
    '151': '23', '152': '23', '153': '23', '154': '23', '155': '23', '156': '23',
    '157': '23', '158': '23', '159': '86', '160': '86', '161': '86', '162': '86',
    '163': '86', '164': '86', '165': '86', '166': '86', '167': '86', '168': '86',
    '169': '86', '170': '86', '171': '86', '172': '86', '173': '86', '174': '86',
    '175': '86', '176': '86', '177': '86', '178': '86', '179': '86', '180': '86',
    '181': '86', '182': '86', '183': '86', '184': '86', '185': '86', '186': '86',
    '187': '86', '188': '86', '189': '86', '190': '86', '191': '86', '192': '86',
    '193': '86', '194': '86', '195': '86', '196': '84', '197': '84', '198': '84',
    '199': '84', '200': '84', '201': '84', '202': '84', '203': '84', '204': '84',
    '205': '84', '206': '84', '207': '84', '208': '84', '209': '84', '210': '84',
    '211': '84', '212': '91', '213': '91', '214': '91', '215': '91', '216': '89',
    '217': '89', '218': '89', '219': '89', '220': '89', '221': '13', '222': '11',
    '223': '99', '224': '99', '225': '99', '226': '99', '227': '99', '228': '99',
    '229': '99', '230': '99', '231': '99', '232': '57', '233': '57', '234': '57',
    '235': '57', '236': '55', '237': '99', '238': '99', '239': '99', '240': '99',
    '241': '99', '242': '99', '243': '99', '244': '99', '245': '99', '246': '99',
    '247': '99', '248': '99', '249': '99', '250': '99', '251': '99', '252': '99',
    '253': '99', '254': '99', '255': '99', '256': '99', '257': '99', '258': '99',
    '259': '99', '260': '99', '261': '99', '262': '99', '263': '99', '264': '99',
    '265': '99', '266': '99', '267': '99', '268': '17', '269': '17', '270': '17',
    '271': '17', '272': '17', '273': '17', '274': '17', '275': '17', '276': '17',
    '277': '17', '278': '17', '279': '15', '280': '15', '281': '15', '282': '15',
    '283': '15', '284': '15', '285': '15', '286': '15', '287': '15', '288': '15',
    '289': '15', '290': '15', '291': '15', '292': '15', '293': '15', '294': '15',
    '295': '15', '296': '15', '297': '15', '298': '15', '299': '15', '300': '15',
    '301': '15', '302': '15', '303': '37', '304': '37', '305': '37', '306': '37',
    '307': '37', '308': '37', '309': '37', '310': '37', '311': '35', '312': '35',
    '313': '35', '314': '35', '315': '35', '316': '35', '317': '35', '318': '11',
    '319': '11', '320': '11', '321': '11', '322': '11', '323': '11', '324': '11',
    '325': '11', '326': '11', '327': '11', '328': '11', '329': '11', '330': '11',
    '331': '11', '332': '11', '333': '11', '334': '11', '335': '11', '336': '11',
    '337': '11', '338': '11', '339': '11', '340': '11', '341': '11', '342': '11',
    '343': '11', '344': '11', '345': '11', '346': '08', '347': '08', '348': '08',
    '349': '08', '350': '08', '351': '08', '352': '08', '353': '08', '354': '08',
    '355': '08', '356': '08', '357': '08', '358': '08', '359': '08', '360': '08',
    '361': '08', '362': '39', '363': '39', '364': '39', '365': '39', '366': '39',
    '367': '39', '368': '39', '369': '39', '370': '37', '371': '37', '372': '37',
    '373': '37', '374': '37', '375': '37', '376': '37', '377': '37', '378': '37',
    '379': '37', '380': '37', '381': '37', '382': '37', '383': '37', '384': '37',
    '385': '37', '386': '37', '387': '33', '388': '33', '389': '33', '390': '33',
    '391': '33', '392': '33', '393': '33', '394': '33', '395': '33', '396': '33',
    '397': '33', '398': '31', '399': '31', '400': '73', '401': '73', '402': '73',
    '403': '73', '404': '73', '405': '73', '406': '73', '407': '73', '408': '99',
    '409': '99', '410': '99', '411': '99', '412': '99', '413': '99', '414': '99',
    '415': '99', '416': '67', '417': '67', '418': '67', '419': '67', '420': '67',
    '421': '67', '422': '67', '423': '67', '424': '65', '425': '99', '426': '99',
    '427': '99', '428': '99', '429': '99', '430': '99', '431': '99', '432': '99',
    '433': '99', '434': '99', '435': '99', '436': '99', '437': '99', '438': '99',
    '439': '99', '440': '29', '441': '29', '442': '29', '443': '27', '444': '27',
    '445': '27', '446': '27', '447': '27', '448': '27', '449': '99', '450': '99',
    '451': '99', '452': '99', '453': '99', '454': '99', '455': '99', '456': '99',
    '457': '99', '458': '99', '459': '99', '460': '99', '461': '99', '462': '99',
    '463': '99', '464': '99', '465': '99', '466': '99', '467': '99', '468': '57',
    '469': '57', '470': '57', '471': '57', '472': '57', '473': '55', '474': '55',
    '475': '55', '476': '55', '477': '55', '478': '43', '479': '41', '480': '41',
    '481': '41', '482': '41', '483': '41', '484': '41', '485': '41', '486': '29',
    '487': '29', '488': '29', '489': '29', '490': '29', '491': '29', '492': '29',
    '493': '29', '494': '29', '495': '29', '496': '29', '497': '29', '498': '29',
    '499': '29', '500': '29', '501': '37', '502': '37', '503': '45', '504': '45',
    '505': '59', '506': '57', '507': '57', '508': '57', '509': '33', '510': '33',
    '511': '33', '512': '33', '513': '31', '514': '31', '515': '31', '516': '49',
    '517': '49', '518': '89', '519': '87', '520': '61', '521': '99', '522': '99',
    '523': '99', '524': '99', '525': '99', '526': '99', '527': '99', '528': '99',
    '529': '99', '530': '99', '531': '71', '532': '71', '533': '71', '534': '71',
    '535': '71', '536': '71', '537': '71', '538': '71', '539': '71', '540': '83',
    '541': '83', '542': '81', '543': '81', '544': '81', '545': '99', '546': '99',
    '547': '99', '548': '99', '549': '99', '550': '99', '551': '99', '552': '99',
    '553': '99', '554': '99', '555': '99', '556': '99', '557': '99', '558': '99',
    '559': '99', '560': '99', '561': '99', '562': '99', '563': '99', '564': '99',
    '565': '99', '566': '99', '567': '99', '568': '99', '569': '99', '570': '99',
    '571': '99', '572': '99', '573': '99', '574': '61', '575': '99', '576': '99',
    '577': '53', '578': '53', '579': '53', '580': '41', '581': '99', '582': '99',
    '583': '99', '584': '99', '585': '99', '586': '67', '587': '99', '588': '09',
    '589': '99', '590': '99', '591': '99', '592': '99', '593': '99', '594': '99',
    '595': '99', '596': '94', '597': '92', '598': '92', '599': '92', '600': '99',
    '601': '99', '602': '87', '603': '87', '604': '87', '605': '87', '606': '87',
    '607': '87', '608': '87', '609': '87', '610': '87', '611': '87', '612': '87',
    '613': '87', '614': '87', '615': '87', '616': '87', '617': '87', '618': '87',
    '619': '87', '620': '85', '621': '85', '622': '85', '623': '85', '624': '85',
    '625': '85', '626': '85', '627': '31', '628': '31', '629': '31', '630': '31',
    '631': '31', '632': '31', '633': '31', '634': '31', '635': '31', '636': '31',
    '637': '29', '638': '29', '639': '29', '640': '29', '641': '29', '642': '29',
    '643': '29', '644': '29', '645': '29', '646': '23', '647': '21', '648': '58',
    '649': '56', '650': '62', '651': '62', '652': '62', '653': '60', '654': '38',
    '655': '36', '656': '36', '657': '36', '658': '36', '659': '24', '660': '24',
    '661': '22', '662': '22', '663': '22', '664': '22', '665': '22', '667': '48',
    '668': '48', '669': '48', '670': '48', '671': '48', '672': '48', '673': '48',
    '674': '48', '675': '48', '676': '22', '677': '22', '678': '22', '679': '20',
    '680': '31', '681': '24', '682': '24', '683': '24', '684': '24', '685': '24',
    '686': '24', '687': '24', '688': '24', '689': '24', '690': '22', '691': '18',
    '692': '18', '693': '16', '694': '16', '695': '16', '696': '16', '697': '16',
    '698': '16', '699': '16', '700': '18', '701': '18', '702': '18', '703': '18',
    '704': '18', '705': '18', '706': '18', '707': '18', '708': '18', '709': '18',
    '710': '18', '711': '18', '712': '18', '713': '18', '714': '18', '715': '18',
    '716': '18', '717': '18', '718': '18', '719': '18', '720': '18', '721': '18',
    '722': '18', '723': '18', '724': '28', '725': '18', '726': '18', '727': '10',
    '728': '14', '729': '28', '730': '28', '731': '28', '732': '28', '733': '26',
    '750': '20', '751': '18', '752': '09', '753': '07', '754': '07', '755': '07',
    '756': '12', '757': '12', '758': '12', '759': '12', '760': '12', '761': '12',
    '762': '12', '763': '12', '764': '29', '765': '27', '766': '04', '767': '02',
    '768': '02', '769': '02', '770': '02', '771': '02', '772': '02'
};
